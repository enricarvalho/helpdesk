const axios = require('axios');

async function testarAIAnalysis() {
  try {
    console.log('ü§ñ Testando rota de AI Analysis...');
    
    // 1. Fazer login
    console.log('üìù Fazendo login...');
    const loginResponse = await axios.post('http://localhost:5000/api/users/login', {
      email: 'admin@deskhelp.com',
      senha: 'admin123'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ Login realizado com sucesso!');
    
    // 2. Buscar chamados existentes
    console.log('üîç Buscando chamados existentes...');
    const chamadosResponse = await axios.get('http://localhost:5000/api/chamados', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    console.log(`üìä Encontrados ${chamadosResponse.data.length} chamados`);
    
    if (chamadosResponse.data.length === 0) {
      console.log('‚ö†Ô∏è Nenhum chamado encontrado. Criando um chamado de teste...');
      
      // Criar um chamado de teste
      const novoChamado = await axios.post('http://localhost:5000/api/chamados', {
        titulo: 'Problema com login no sistema',
        descricao: 'N√£o consigo fazer login no sistema. A senha parece estar incorreta e o usu√°rio est√° bloqueado.',
        prioridade: 'Alta',
        categoria: 'TI'
      }, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ Chamado criado:', novoChamado.data._id);
      chamadosResponse.data.push(novoChamado.data);
    }
    
    // 3. Testar an√°lise de IA no primeiro chamado
    const chamadoId = chamadosResponse.data[0]._id;
    console.log(`üß† Testando an√°lise de IA para chamado: ${chamadoId}`);
    
    const aiResponse = await axios.get(`http://localhost:5000/api/chamados/${chamadoId}/ai-analysis`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    console.log('‚úÖ An√°lise de IA obtida com sucesso!');
    console.log('üéØ Resultados da an√°lise:');
    console.log(JSON.stringify(aiResponse.data, null, 2));
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data || error.message);
    console.error('Status:', error.response?.status);
    console.error('Headers:', error.response?.headers);
    
    if (error.response?.data && typeof error.response.data === 'string') {
      console.error('Resposta em texto (poss√≠vel HTML):', error.response.data.substring(0, 200));
    }
  }
}

testarAIAnalysis();
